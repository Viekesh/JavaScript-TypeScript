{"version":3,"sources":["js/index.js"],"names":["createPost","title","content","socialCard","document","createElement","setAttribute","icon","postTitle","postUser","postContent","append","innerText","body","prepend"],"mappings":"AACA;AACA;AACA,MAAMA,UAAU,GAAG,SAAAA,CAAU;EAAEC,KAAK;EAAEC;AAAQ,CAAC,EAAE;EAE/C;EACA,MAAMC,UAAU,GAAGC,QAAQ,CAACC,aAAa,CAAC,KAAK,CAAC;EAChD;EACA;EACA;EACA;;EAEA;EACA;EACA;EACA;EACA;;EAEA;EACA;EACA;EACAF,UAAU,CAACG,YAAY,CAAC,OAAO,EAAE,aAAa,CAAC;;EAE/C;EACA;;EAEA;;EAEA;;EAEA;;EAEA;EACA;;EAEA,MAAMC,IAAI,GAAGH,QAAQ,CAACC,aAAa,CAAC,KAAK,CAAC;EAC1CE,IAAI,CAACD,YAAY,CAAC,OAAO,EAAE,WAAW,CAAC;EAEvC,MAAME,SAAS,GAAGJ,QAAQ,CAACC,aAAa,CAAC,KAAK,CAAC;EAC/CG,SAAS,CAACF,YAAY,CAAC,OAAO,EAAE,YAAY,CAAC;EAE7C,MAAMG,QAAQ,GAAGL,QAAQ,CAACC,aAAa,CAAC,KAAK,CAAC;EAC9CI,QAAQ,CAACH,YAAY,CAAC,OAAO,EAAE,WAAW,CAAC;EAE3C,MAAMI,WAAW,GAAGN,QAAQ,CAACC,aAAa,CAAC,KAAK,CAAC;EACjDK,WAAW,CAACJ,YAAY,CAAC,OAAO,EAAE,cAAc,CAAC;EACjD;EACA;;EAEA;EACAH,UAAU,CAACQ,MAAM,CAACJ,IAAI,EAAEC,SAAS,EAAEC,QAAQ,EAAEC,WAAW,CAAC;EACzD;EACA;;EAEA;EACA;EACA;EACA;EACAF,SAAS,CAACI,SAAS,GAAGX,KAAK;;EAE3B;EACA;;EAEA;EACAQ,QAAQ,CAACG,SAAS,GAAG,aAAa;EAClCF,WAAW,CAACE,SAAS,GAAGV,OAAO;EAE/BE,QAAQ,CAACS,IAAI,CAACC,OAAO,CAACX,UAAU,CAAC;AACnC,CAAC;;AAID;AACA;AACA;;AAEA;;AAEAH,UAAU,CAAC;EACTC,KAAK,EAAE,cAAc;EACrBC,OAAO,EAAG;AACZ,CAAC,CAAC;;AAEF;AACA;AACA;AACA;AACA;AACAF,UAAU,CAAC;EACTC,KAAK,EAAE,yBAAyB;EAChCC,OAAO,EAAG;AACZ,CAAC,CAAC;AAEFF,UAAU,CAAC;EACTC,KAAK,EAAE,wBAAwB;EAC/BC,OAAO,EAAG;AACZ,CAAC,CAAC;;AAIF;AACA;;AAEA;AACA","file":"js.00a46daa.js","sourceRoot":"..\\src","sourcesContent":["\n// We pass an object to the createPost method with two propeties \"title\" and \"content\" and we'll dynamically set\n// these like so...\nconst createPost = function ({ title, content }) {\n\n  // outer div with the class name \"social-card\"\n  const socialCard = document.createElement('div');\n  // this now creates a HTML element in the memory but you want see anything on the page.\n  // this is because you need to insert the \"div\" element into the page. For this we want to drop the element\n  // in the body of the HTML document to do this we'll access the body using \"document.body\" and I will use a\n  // method named \"append\" to literally append this newly created \"div\" to the existing content of the body.\n\n  // If you see HTML document using dev tools you'll see empty \"div\" appended to the body element and you'll\n  // see that our script tag shall sets above it this is because the append method saw the script tag as the\n  // existing content of the body and just appended the div after that in this case we want our socialCard\n  // to be above script tag. Therefore instead of using append we will use the \"prepend\" method. Now our div\n  // appears before the script tag in the body element.\n\n  // but so far we don't have the class attribute set. To do that we'll grab the handle to our socialCard div\n  // and we will use the set attribute method which takes an attribute name and its value. see below line we'll\n  // set the \"class\" \"social-card\". This does the job... \n  socialCard.setAttribute('class', 'social-card');\n\n  // Now you'll see on the HTML document all programatically generated using JavaScript. Our next job is to\n  // create other div's and render them inside the social card div.\n\n  // Let's see how this is done...\n\n  // We already turn our process of generating these social card to a reusable function named \"createPost\" like so.\n\n  // We'll then execute the function and we get our div.\n\n  // So, now let's first create a div's that go inside our socialCard. Here we will create the \"icon\" and set\n  // it's class \"post-icon\"\n\n  const icon = document.createElement('div');\n  icon.setAttribute('class', 'post-icon');\n\n  const postTitle = document.createElement('div');\n  postTitle.setAttribute('class', 'post-title');\n\n  const postUser = document.createElement('div');\n  postUser.setAttribute('class', 'post-user');\n\n  const postContent = document.createElement('div');\n  postContent.setAttribute('class', 'post-content');\n  // So, far all of these have been instantiated to get them inside the socialCard div and to render them on to\n  // the page \n\n  // after creating element we use this append method to access the socialCard elements.\n  socialCard.append(icon, postTitle, postUser, postContent);\n  // We pass here all the nodes that need to be rendered and this create our social card even though there is\n  // not any content you can see icon because this is hard coded in css.\n\n  // So, now we can add some content...\n  // Remember we have our HTML tags in place on the page. Since we have created all the elements here. We can\n  // use their constants to access and manipulate them. In this case we will set a property on the postTitle\n  // div named innerText and it get's rendered on the page.\n  postTitle.innerText = title;\n\n  // As the name implies innerText will set the text content of the div based on the string that you provide.\n  // pretty cool and simple... right?\n\n  // Likewise let's set the content of the postUser and postContent div's like so...\n  postUser.innerText = 'Joe Mockery';\n  postContent.innerText = content;\n\n  document.body.prepend(socialCard);\n};\n\n\n\n// Now we can pass an object to the create post method with the title and content propeties sets like so...\n// And here you go. This renders our social media post. The reason why we did that is because I can add\n// another post and it get's render on top.\n\n// Why?\n\ncreatePost({\n  title: 'Midnight Sun',\n  content: `Oh man, last month I was in Sweden and I witnessed the midnight sun. It was a surreal experience to see sunlight at 2 in the morning! Couldn't sleep at all, but felt fresh!`,\n});\n\n// Because we use \"document.body.prepend\" So the existing content of the div will remain and  the new post\n// just get's prepended on the top.\n// So the latest post go on the top, just like a social media site.\n// Let's add one more and there you go... Is not this fun. If you have an array of post here you can also use the\n// forEach method to look thorough the posts and dynamically generated social cards.\ncreatePost({\n  title: 'Working with JavaScript',\n  content: `It's been almost 10 years since I started working with JavaScript and it's awesome to see it grow to a mature and loved language. Kudos JS!`,\n});\n\ncreatePost({\n  title: 'Selling my Honda Civic',\n  content: `Guys, I'm selling my old Honda Civic automatic. Anyone interested, please call me/DM me`,\n});\n\n\n\n// This is funcametally and conceptually how modern web application like Facebook works, though there is a whole\n// lot going on there...\n\n// So, congratulations. You've just used the DOM interface to create, manipulate and insert elements into the\n// HTML document"]}